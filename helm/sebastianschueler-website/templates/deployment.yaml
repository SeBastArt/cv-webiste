apiVersion: apps/v1
kind: Deployment
metadata:
  name: website
  namespace: {{ .Values.namespace.name }}
  labels:
    app: website
    {{ include "sebastianschueler-website.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.website.replicas }}
  selector:
    matchLabels:
      app: website
      {{ include "sebastianschueler-website.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: website
        version: {{ .Values.website.version | default "v1" }}
        {{ include "sebastianschueler-website.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: website
          image: "{{ .Values.website.image }}:{{ .Values.website.imageVersion }}"
          ports:
          - containerPort: {{ .Values.website.targetPort }}
            name: http
            protocol: TCP
          {{- if .Values.website.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- end }}
          resources:
            {{ toYaml .Values.website.resources | nindent 12 }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 101
            runAsGroup: 101
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
          - name: tmp-volume
            mountPath: /tmp
          - name: var-cache-nginx
            mountPath: /var/cache/nginx
          - name: var-run
            mountPath: /var/run
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: var-cache-nginx
        emptyDir: {}
      - name: var-run
        emptyDir: {}
